- setup object tests 
  - pyarrow typing
  - sql typing
  - 

- Ingest and read and query types is the core use case+

- add an api sample too - this can be used to call the agent but also provide test endpoints for the Function model

- promote on slack channles, medium, substack, discords 

- stuff like DEFAULT_MODEL should be in the env

- keep the main points super linear and simple and then create a 100 things you can do with funkyprompt list


questions
- pros and cons of supporting both class and instance methods

- dynamic typing is a good game to play where we can just talk to the agent and ingest structured things - i might riff on that for a bit
- the other thing is init from a consuming library with a module of types
- we should not add that many static types to funkpyrompt - just the core ones; plans, functions, convos, global-function   
- multi function calls and when to do it

git credential-osxkeychain erase
host=github.com
protocol=ssh
git config --list
git config core.sshCommand 'ssh -i ~/.ssh/mr-saoirse'
git config user.name "mr-saoirse"


terms:
- object oriented generation
- object orienated guidance
- typed guidnance or pydantic guidance 


built in use cases
- index codebase and ask questions about it
- the world api general entity type
- converstaions as entities
- plans as entities
- adding your own library entities


